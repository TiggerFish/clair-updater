# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - name: docker:dind
      alias: thedockerhost
  variables:
    # Tell docker CLI how to talk to Docker daemon; see
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
    DOCKER_HOST: tcp://thedockerhost:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  
  before_script:
    # Log in to the GitLab container registry
    - export REGISTRY_AUTH_FILE=$HOME/auth.json
    - echo "$RH_REGISTRY_PASSWORD" | docker login -u "$RH_REGISTRY_USER" --password-stdin $RH_REGISTRY

  script:
    - mkdir $CI_PROJECT_DIR/output
    - chmod 777 $CI_PROJECT_DIR/output
    - docker compose up -d
    - docker exec --workdir /output clairv4 clairctl --config /clair/compose-config.yaml export-updaters updates.gz || true
    - wget https://www.redhat.com/security/data/metrics/repository-to-cpe.json -O $CI_PROJECT_DIR/output/repository-to-cpe.json
    - wget https://access.redhat.com/security/data/metrics/container-name-repos-map.json -O $CI_PROJECT_DIR/output/container-name-repos-map.json
  artifacts:
    paths:
      - $CI_PROJECT_DIR/output/updates.gz
      - $CI_PROJECT_DIR/output/repository-to-cpe.json
      - $CI_PROJECT_DIR/output/container-name-repos-map.json
      
